name: Build and Release C++ Executable

on:
  push:
    tags:
      - 'v*.*.*'  # O workflow será acionado sempre que um novo tag de versão for criado

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3  # Faz o checkout do código

    - name: Install dependencies
      run: sudo apt-get install -y g++ make cmake  # Instala g++, make, cmake

    - name: Compile all .cpp files
      run: |
        mkdir -p build  # Cria diretório build, se não existir
        echo "Compilando arquivos .cpp..."
        for file in *.cpp; do
          filename=$(basename "$file" .cpp)  # Extrai o nome do arquivo sem a extensão
          echo "Compilando $file para build/$filename"
          g++ -o "build/$filename" "$file" || exit 1  # Compila e sai se houver erro
        done

    - name: List executables
      run: ls build  # Lista os executáveis gerados para verificação

    - name: Upload artifacts for release
      uses: actions/upload-artifact@v3
      with:
        name: executáveis  # Nome do artefato
        path: build/*  # Caminho de todos os executáveis gerados

  create_release:
    needs: build  # Esta etapa só roda se a etapa de build terminar com sucesso
    runs-on: ubuntu-latest

    steps:
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}  # Usa o nome do tag como nome da release
        name: "Release ${{ github.ref }}"  # Nome da release
        body: "Descrição da Release para o tag ${{ github.ref }}"
        files: build/*  # Carrega todos os executáveis da pasta build para a release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token automático para autenticação do GitHub
